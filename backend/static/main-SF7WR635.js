import{A as w,B as I,C as M,F as V,G as F,J as O,K as R,L as P,M as j,O as q,P as L,Q as T,R as b,S as W,T as A,U as $,V as B,W as H,X as U,Y,Z as G,f as k,g,h as S,i as v,j as C,k as f,l as _,m as a,n as N,o as u,p as l,q as r,r as i,s as y,t as h,u as x,v as d,x as o,y as m,z as D}from"./chunk-RNVLKXDN.js";function Z(e,t){e&1&&(r(0,"h2",3),o(1,"Error, something went wrong in the setup"),i())}function ee(e,t){if(e&1){let n=h();r(0,"button",5),x("click",function(){f(n);let s=d(2);return _(s.startSetup())}),o(1,"Start"),i()}}function te(e,t){e&1&&(r(0,"p"),o(1,"Identifying available devices..."),i())}function ie(e,t){if(e&1&&(r(0,"tr")(1,"td"),o(2),i(),r(3,"td",11),o(4),i(),r(5,"td",11),o(6),i(),r(7,"td",12),o(8),i(),r(9,"td",13),o(10),i()()),e&2){let n=t.$implicit;a(2),m(n.hostname),a(2),m(n.vendor),a(2),m(n.ip),a(2),m(n.mac),a(2),m(n.interface)}}function ne(e,t){if(e&1&&(r(0,"table")(1,"tr")(2,"th"),o(3,"Device Name (can be unknown) "),i(),r(4,"th"),o(5," Vendor Name "),i(),r(6,"th"),o(7," IP Address "),i(),r(8,"th",9),o(9," Mac Address "),i(),r(10,"th"),o(11," Network Interface "),i()(),u(12,ie,11,5,"tr",10),i()),e&2){let n=d(3);a(12),l("ngForOf",n.devices)}}function re(e,t){e&1&&(r(0,"p"),o(1," first insert the network interface you want to use (all devices from other interfaces will be removed)"),i())}function oe(e,t){if(e&1){let n=h();r(0,"input",14),M("ngModelChange",function(s){f(n);let c=d(3);return I(c.interface,s)||(c.interface=s),_(s)}),i()}if(e&2){let n=d(3);w("ngModel",n.interface)}}function ae(e,t){e&1&&(r(0,"button",15),o(1,"Submit"),i())}function se(e,t){e&1&&(r(0,"h3"),o(1,"Now enter new names for each device (Note: each blank field will result in the device being ignored)"),i())}function pe(e,t){if(e&1){let n=h();r(0,"div")(1,"p"),o(2),i(),u(3,ne,13,1,"table",2)(4,re,2,0,"p",2),r(5,"form",6),x("submit",function(){f(n);let s=d(2);return _(s.submitInterface())}),u(6,oe,1,1,"input",7)(7,ae,2,0,"button",8)(8,se,2,0,"h3",2),i()()}if(e&2){let n=d(2);a(2),D("Found ",n.devices.length," devices on your network :"),a(),l("ngIf",!n.interfaceSelected),a(),l("ngIf",!n.interfaceSelected),a(2),l("ngIf",!n.interfaceSelected),a(),l("ngIf",!n.interfaceSelected),a(),l("ngIf",n.interfaceSelected)}}function le(e,t){if(e&1){let n=h();r(0,"tr")(1,"td"),o(2),i(),r(3,"td",11),o(4),i(),r(5,"td",11),o(6),i(),r(7,"td",11),o(8),i(),r(9,"td",13),o(10),i(),r(11,"td")(12,"input",16),M("ngModelChange",function(s){let c=f(n).$implicit;return I(c.device_name,s)||(c.device_name=s),_(s)}),i()()()}if(e&2){let n=t.$implicit;a(2),m(n.hostname),a(2),m(n.vendor),a(2),m(n.ip),a(2),m(n.mac),a(2),m(n.interface),a(2),w("ngModel",n.device_name)}}function ce(e,t){e&1&&(r(0,"button",15),o(1,"Submit"),i())}function de(e,t){e&1&&(r(0,"p"),o(1,"Devices have been registered successfully"),i())}function me(e,t){if(e&1){let n=h();r(0,"div")(1,"form",6),x("submit",function(){f(n);let s=d(2);return _(s.submitDeviceNames())}),r(2,"table")(3,"tr")(4,"th"),o(5,"Device Name (can be unknown)"),i(),r(6,"th"),o(7," Vendor Name "),i(),r(8,"th"),o(9," IP Address "),i(),r(10,"th"),o(11," Mac Address "),i(),r(12,"th"),o(13," Network Interface "),i(),r(14,"th"),o(15," New Name "),i()(),u(16,le,13,6,"tr",10),i(),u(17,ce,2,0,"button",8),i(),u(18,de,2,0,"p",2),i()}if(e&2){let n=d(2);a(16),l("ngForOf",n.devices),a(),l("ngIf",!n.devicesRegistered),a(),l("ngIf",n.devicesRegistered)}}function ue(e,t){if(e&1&&(r(0,"div")(1,"div")(2,"h2"),o(3,"Identification of devices"),i(),r(4,"div")(5,"p"),o(6," To use this app we first need to identify devices on your network. The system will look at known ip addresses and ask you to provide a name for each of them. Press the button start to begin. "),i()(),u(7,ee,2,0,"button",4)(8,te,2,0,"p",2),i(),u(9,pe,9,6,"div",2)(10,me,19,3,"div",2),i()),e&2){let n=d();a(7),l("ngIf",!n.devicesFound),a(),l("ngIf",n.queryingDevices),a(),l("ngIf",n.devicesFound),a(),l("ngIf",n.interfaceSelected)}}function fe(e,t){e&1&&(r(0,"div")(1,"h2"),o(2,"You successfully registered your devices."),i()())}function _e(e,t){e&1&&(r(0,"div")(1,"h2"),o(2,"Capture of idle traffic is also done, nothing else to do here."),i()())}function he(e,t){if(e&1&&(r(0,"p"),o(1),i()),e&2){let n=t.$implicit;a(),m(n)}}function ve(e,t){e&1&&(r(0,"p"),o(1,"You started the capture, this will take 6 hours"),i())}function ge(e,t){if(e&1&&(r(0,"p"),o(1),i()),e&2){let n=d(2);a(),m(n.response.status)}}function xe(e,t){if(e&1){let n=h();r(0,"div")(1,"h2"),o(2,"Now that all devices are registered, you can start capturing idle traffic from your network (i.e. when you don't interract with all your devices)"),i(),r(3,"div")(4,"p"),o(5," the following devices require a capture:"),i(),u(6,he,2,1,"p",10),i(),r(7,"p"),o(8,"press this button to start capturing. Note that this will take 6hours"),i(),r(9,"button",17),x("click",function(){f(n);let s=d();return _(s.clickIdle())}),o(10,"Start capture"),i(),u(11,ve,2,0,"p",2)(12,ge,2,1,"p",2),i()}if(e&2){let n=d();a(6),l("ngForOf",n.dev_names),a(5),l("ngIf",n.buttonClicked),a(),l("ngIf",n.response)}}function Se(e,t){if(e&1&&(r(0,"p"),o(1),i()),e&2){let n=d(2);a(),m(n.response.status)}}function Ce(e,t){if(e&1&&(r(0,"div"),u(1,Se,2,1,"p",2),i()),e&2){let n=d();a(),l("ngIf",n.response)}}var z=(()=>{let t=class t{constructor(p){this.http=p,this.captureIdleDone=!1,this.devices=[],this.dev_names=[],this.queryingDevices=!1,this.devicesFound=!1,this.interfaceSelected=!1,this.devicesRegistered=!1,this.deviceRegistrationComplete=!1,this.captureComplete=!1,this.error=!1,this.interface="",this.buttonClicked=!1,this.url=""}ngOnInit(){this.url=new b().getUrl()}startSetup(){this.queryingDevices=!0,this.http.get(`${this.url}/api/start_setup`).pipe(g(this.handleError.bind(this))).subscribe(p=>{this.devicesFound=!0,this.response=p,this.response.interface!="none"&&(this.interface=this.response.interface,this.interfaceSelected=!0),this.response.list.length==0&&(console.log("No new devices found"),this.deviceRegistrationComplete=!0,this.devicesRegistered=!0,this.getDevicesToCapture()),this.devices=this.response.list,this.response=""})}submitInterface(){this.http.post(`${this.url}/api/submit_interface`,this.interface).pipe(g(this.handleError.bind(this))).subscribe(p=>{this.interfaceSelected=!0,this.devices=p})}submitDeviceNames(){this.http.post(`${this.url}/api/submit_device_names`,this.devices).pipe(g(this.handleError.bind(this))).subscribe(p=>{this.response=p,this.response=="success"&&(this.deviceRegistrationComplete=!0,this.devicesRegistered=!0),this.getDevicesToCapture()})}getDevicesToCapture(){this.http.get(`${this.url}/api/get_devices_to_capture`).pipe(g(this.handleError.bind(this))).subscribe(p=>{console.log(p),this.response=p,this.dev_names=this.response,this.dev_names.length==0&&(this.captureComplete=!0),console.log(this.dev_names)})}clickIdle(){this.buttonClicked=!0,this.http.get(`${this.url}/api/capture_idle`).subscribe(p=>{this.response=p,this.response.status=="capture idle success"?(this.captureIdleDone=!0,this.captureComplete=!0):this.response.status="Error, try again"})}handleError(p){return console.error(p),this.error=!0,k(()=>new Error("Server error"))}};t.\u0275fac=function(s){return new(s||t)(N(O))},t.\u0275cmp=v({type:t,selectors:[["app-setup"]],decls:7,vars:6,consts:[[1,"component"],["style","color: red",4,"ngIf"],[4,"ngIf"],[2,"color","red"],["style","width: 100px; height: 30px",3,"click",4,"ngIf"],[2,"width","100px","height","30px",3,"click"],[3,"submit"],["type","text","name","interface","placeholder","interface",3,"ngModel","ngModelChange",4,"ngIf"],["style","width: 100px; height: 30px","type","submit",4,"ngIf"],[2,"padding-left","20px"],[4,"ngFor","ngForOf"],[2,"text-align","center"],[2,"text-align","center","padding-left","20px"],[2,"text-align","right"],["type","text","name","interface","placeholder","interface",3,"ngModelChange","ngModel"],["type","submit",2,"width","100px","height","30px"],["type","text","name","name","placeholder","name","required","",3,"ngModelChange","ngModel"],[1,"button","button1",2,"width","100px","height","30px",3,"click"]],template:function(s,c){s&1&&(r(0,"div",0),u(1,Z,2,0,"h2",1)(2,ue,11,4,"div",2)(3,fe,3,0,"div",2)(4,_e,3,0,"div",2)(5,xe,13,3,"div",2)(6,Ce,2,1,"div",2),i()),s&2&&(a(),l("ngIf",c.error),a(),l("ngIf",!c.deviceRegistrationComplete),a(),l("ngIf",c.deviceRegistrationComplete),a(),l("ngIf",c.captureComplete),a(),l("ngIf",c.deviceRegistrationComplete&&!c.captureIdleDone&&!c.captureComplete),a(),l("ngIf",c.captureIdleDone))},dependencies:[V,F,U,W,A,$,Y,H,B],styles:[".component[_ngcontent-%COMP%]{margin-left:25px;margin-right:25px}"]});let e=t;return e})();var ye=[{path:"setup",component:z},{path:"",loadChildren:()=>import("./chunk-5M7JGUKW.js").then(e=>e.DevicesModule)}],J=(()=>{let t=class t{};t.\u0275fac=function(s){return new(s||t)},t.\u0275mod=C({type:t}),t.\u0275inj=S({imports:[T.forRoot(ye),T]});let e=t;return e})();var K=(()=>{let t=class t{};t.\u0275fac=function(s){return new(s||t)},t.\u0275cmp=v({type:t,selectors:[["app-header"]],decls:6,vars:0,consts:[[1,"topnav"],["routerLink","/",1,"app"],["routerLink","/setup"],["src","assets/UCLouvain-logo.jpg",1,"logo"]],template:function(s,c){s&1&&(r(0,"div",0)(1,"a",1),o(2,"Energy Monitoring App"),i(),r(3,"a",2),o(4,"Setup"),i(),y(5,"img",3),i())},dependencies:[L],styles:[".topnav[_ngcontent-%COMP%]{width:100%;overflow:hidden;background-color:#58b9ed}.topnav[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#000;float:left;display:block;text-align:center;padding:20px;text-decoration:none}.topnav[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{background-color:#87ceeb}.app[_ngcontent-%COMP%]{margin-left:15px}.logo[_ngcontent-%COMP%]{position:absolute;height:50px;top:.5%;right:20px}"]});let e=t;return e})();var Q=(()=>{let t=class t{constructor(){this.title="frontend"}};t.\u0275fac=function(s){return new(s||t)},t.\u0275cmp=v({type:t,selectors:[["app-root"]],decls:2,vars:0,template:function(s,c){s&1&&y(0,"app-header")(1,"router-outlet")},dependencies:[q,K]});let e=t;return e})();var X=(()=>{let t=class t{};t.\u0275fac=function(s){return new(s||t)},t.\u0275mod=C({type:t,bootstrap:[Q]}),t.\u0275inj=S({providers:[b],imports:[j,J,R,G]});let e=t;return e})();P().bootstrapModule(X).catch(e=>console.error(e));
